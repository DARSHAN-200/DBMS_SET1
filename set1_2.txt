2.2. Create a database 
1. employee (employee name, street, city) ,employee name is primary key 
2. works (employee name, company name, salary) 
3. company (company name, city) ,company name is primary key 
4. manages (employee name, manager name) 
Give an expression in SQL for each of the following queries. 
1. Find the names of all employees who work for First Bank Corporation. 
2. Find all employees who do not work for First Bank Coorporation 
3. Find the company that has most employees. 
4. Find all companies located in every in which small bank corporation is located 
5. Find details of employee having salary greater than 10,000. 
6. Update salary of all employees who work for First Bank Corporation by 10%. 
7. Find employee and their managers. 
8. Find the names, street and cities of all employees who work for First Bank 
Corporation and earn more than 10,000. 
9. Find those companies whose employees earn a higher salary,on average, than th 
average salary at First Bank Corporation

CREATE DATABASE company_db;

USE company_db;

CREATE TABLE employee (
    employee_name VARCHAR(50) PRIMARY KEY,
    street VARCHAR(50),
    city VARCHAR(50)
);

CREATE TABLE works (
    employee_name VARCHAR(50),
    company_name VARCHAR(50),
    salary DECIMAL(10, 2),
    FOREIGN KEY (employee_name) REFERENCES employee(employee_name)
);

CREATE TABLE company (
    company_name VARCHAR(50) PRIMARY KEY,
    city VARCHAR(50)
);

CREATE TABLE manages (
    employee_name VARCHAR(50),
    manager_name VARCHAR(50),
    FOREIGN KEY (employee_name) REFERENCES employee(employee_name)
);
INSERT INTO employee (employee_name, street, city) VALUES
('Alice', 'Oak St', 'New York'),
('Bob', 'Maple St', 'Los Angeles'),
('Charlie', 'Pine St', 'San Francisco'),
('David', 'Elm St', 'New York'),
('Eva', 'Birch St', 'Los Angeles');

INSERT INTO works (employee_name, company_name, salary) VALUES
('Alice', 'First Bank Corporation', 12000),
('Bob', 'First Bank Corporation', 8000),
('Charlie', 'Tech Solutions', 15000),
('David', 'Small Bank Corporation', 9000),
('Eva', 'Small Bank Corporation', 13000);

INSERT INTO company (company_name, city) VALUES
('First Bank Corporation', 'New York'),
('Small Bank Corporation', 'Los Angeles'),
('Tech Solutions', 'San Francisco');

INSERT INTO manages (employee_name, manager_name) VALUES
('Bob', 'Alice'),
('David', 'Eva'),
('Charlie', 'Alice');

1.SELECT employee_name
FROM works
WHERE company_name = 'First Bank Corporation';

2.SELECT employee_name
FROM works
WHERE company_name != 'First Bank Corporation';


3.SELECT company_name
FROM works
GROUP BY company_name
ORDER BY COUNT(employee_name) DESC
LIMIT 1;

4.SELECT DISTINCT company_name
FROM company
WHERE city IN (
    SELECT city
    FROM company
    WHERE company_name = 'Small Bank Corporation'
);
5.SELECT employee_name, company_name, salary
FROM works
WHERE salary > 10000;


6.UPDATE works
SET salary = salary * 1.10
WHERE company_name = 'First Bank Corporation';

7.
select employee_name ,manager_name from manages;

8.select employee.employee_name ,employee.street,employee.city from employee join works on  employee.employee_name=works.employee_name where works.company_name='First Bank Corporation' and works.salary>10000;

9.SELECT company_name
FROM works
GROUP BY company_name
HAVING AVG(salary) > (
    SELECT AVG(salary)
    FROM works
    WHERE company_name = 'First Bank Corporation'
);
