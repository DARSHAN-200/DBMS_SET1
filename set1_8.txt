8. Consider the following database 
Employee(emp_no,name,skill,pay-rate) eno primary key 
Position(posting_no,skill) posting_no primary key 
Duty_allocation(posting_no,emp_no,day,shift) 
Find the SQL queries for the following: 
1. Get the duty allocation details for emp_no 123461 for the month of April 1986. 
2. Find the shift details for Employee ‘xyz’ 
3. Get employees whose rate of pay is more than or equal to the rate of pay of employee ‘xyz’ 
4. Get the names and pay rates of employees with emp_no less than 123460 whose rate of pay is 
more than the rate of pay of at least one employee with emp_no greater than or equal to 123460. 
5. Find the names of employees who are assigned to all positions that require a Chef’s skill 
6 .Find the employees with the lowest pay rate 
7 .Get the employee numbers of all employees working on at least two dates. 
8 .Get a list of names of employees with the skill of Chef who are assigned a duty 
9 .Get a list of employees not assigned a duty 
10.Get a count of different employees on each shift 
-- Create the Employee table
CREATE TABLE Employee (
    emp_no INT PRIMARY KEY,
    name VARCHAR(50),
    skill VARCHAR(50),
    pay_rate DECIMAL(10, 2)
);

-- Create the Position table
CREATE TABLE Positiont (
    posting_no INT PRIMARY KEY,
    skill VARCHAR(50)
);

-- Create the Duty_allocation table
CREATE TABLE Duty_allocation (
    posting_no INT,
    emp_no INT,
    day DATE,
    shift VARCHAR(10),
  PRIMARY KEY (posting_no, emp_no, day),
    FOREIGN KEY (emp_no) REFERENCES Employee(emp_no),
    FOREIGN KEY (posting_no) REFERENCES Positiont(posting_no)
);

-- Insert sample data into Employee table
INSERT INTO Employee (emp_no, name, skill, pay_rate) VALUES
(123461, 'John', 'Chef', 2500),
(123462, 'Jane', 'Chef', 2700),
(123463, 'Alice', 'Waiter', 1800),
(123464, 'Bob', 'Chef', 2200),
(123465, 'David', 'Chef', 2400),
(123466, 'XYZ', 'Manager', 3000);

-- Insert sample data into Position table
INSERT INTO Positiont (posting_no, skill) VALUES
(1, 'Chef'),
(2, 'Waiter'),
(3, 'Manager');

-- Insert sample data into Duty_allocation table
INSERT INTO Duty_allocation (posting_no, emp_no, day, shift) VALUES
(1, 123461, '1986-04-01', 'Morning'),
(1, 123462, '1986-04-01', 'Afternoon'),
(2, 123463, '1986-04-02', 'Evening'),
(3, 123466, '1986-04-03', 'Morning'),
(1, 123461, '1986-04-05', 'Evening'),
(2, 123463, '1986-04-05', 'Morning');

1.select * from Duty_allocation where emp_no=123461 and Month(day)=04;
2. select Employee.name ,Duty_allocation.shift from Employee join Duty_allocation on Employee.emp_no=Duty_allocation.emp_no where  Employee.name='xyz';
3.SELECT name, pay_rate
FROM Employee
WHERE pay_rate >= (SELECT pay_rate FROM Employee WHERE name = 'XYZ');
4.SELECT name, pay_rate
FROM Employee
WHERE emp_no < 123460
  AND pay_rate > (
    SELECT MAX(pay_rate)  -- Ensuring that only one value is returned
    FROM Employee
    WHERE emp_no >= 123460
);
5.

6. select name,pay_rate from employee order by pay_rate ASC limit 1;
7.SELECT emp_no
FROM Duty_allocation
GROUP BY emp_no
HAVING COUNT(DISTINCT day) >= 2;
8.SELECT Employee.name
FROM Employee 
JOIN Duty_allocation  ON Employee.emp_no = Duty_allocation.emp_no
WHERE e.skill = 'Chef';
9.SELECT name
FROM Employee
WHERE emp_no NOT IN (SELECT DISTINCT emp_no FROM Duty_allocation);
10.select count(emp_no),shift from Duty_allocation group by shift;


